<!--
    // Copyright (c) Microsoft Corporation.  All rights reserved.
    //
    // The MIT License (MIT)
    //
    // Permission is hereby granted, free of charge, to any person obtaining a copy
    // of this software and associated documentation files (the "Software"), to deal
    // in the Software without restriction, including without limitation the rights
    // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
    // copies of the Software, and to permit persons to whom the Software is
    // furnished to do so, subject to the following conditions:
    //
    // The above copyright notice and this permission notice shall be included in
    // all copies or substantial portions of the Software.
    //
    // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
    // THE SOFTWARE.
-->
<Window
    x:Class="MsGraph_Samples.Views.MainView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helper="clr-namespace:MsGraph_Samples.Helpers"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Title="MsGraph Samples"
    Width="1100"
    Height="800"
    DataContext="{Binding MainVM, Source={StaticResource Locator}}"
    Icon="/Assets/MSGraph.png"
    WindowStartupLocation="CenterScreen"
    mc:Ignorable="d">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <!--  Select  -->
            <StackPanel
                Grid.Row="0"
                Grid.Column="0"
                Margin="6,0"
                VerticalAlignment="Bottom">
                <TextBlock FontWeight="Bold">
                    <Hyperlink helper:HyperlinkExtensions.IsWeb="true" NavigateUri="https://docs.microsoft.com/graph/query-parameters?context=graph%2Fapi%2F1.0#select-parameter">
                        $select
                        <Hyperlink.ToolTip>
                            <TextBlock>
                                <Run Foreground="Green">// List properties you want to select separated by a comma</Run>
                            </TextBlock>
                        </Hyperlink.ToolTip>
                    </Hyperlink>
                </TextBlock>
                <TextBox Text="{Binding Select, Mode=TwoWay}" ToolTipService.ShowDuration="10000" />
            </StackPanel>

            <!--  Order By  -->
            <StackPanel
                Grid.Row="1"
                Grid.Column="0"
                Margin="6">
                <TextBlock FontWeight="Bold">
                    <Hyperlink helper:HyperlinkExtensions.IsWeb="true" NavigateUri="https://docs.microsoft.com/graph/query-parameters?context=graph%2Fapi%2F1.0#orderby-parameter">
                        $orderBy
                        <Hyperlink.ToolTip>
                            <TextBlock>
                                <Run Foreground="Green">// Enabled only on few properties, see documentation for details</Run>
                                <LineBreak />
                                property [asc|desc]</TextBlock>
                        </Hyperlink.ToolTip>
                    </Hyperlink>
                </TextBlock>
                <TextBox Text="{Binding OrderBy, Mode=TwoWay}" ToolTipService.ShowDuration="10000" />
            </StackPanel>

            <!--  Filter  -->
            <StackPanel
                Grid.Row="0"
                Grid.Column="1"
                Margin="6,0"
                VerticalAlignment="Bottom">
                <TextBlock FontWeight="Bold">
                    <Hyperlink helper:HyperlinkExtensions.IsWeb="true" NavigateUri="https://docs.microsoft.com/graph/aad-advanced-queries?tabs=http#support-for-filter-on-properties-of-azure-ad-directory-objects">
                        $filter
                        <Hyperlink.ToolTip>
                            <TextBlock>
                                property eq 'filterValue'<LineBreak />
                                property ne 'filterValue'<LineBreak />
                                not propertyCollection/any(p:p eq 'filterValue')<LineBreak />
                                startsWith(property, 'filterValue')<LineBreak />
                                endsWith(property, 'filterValue')<Run Foreground="Green" Text=" // Enabled on mail, userPrincipalName and proxyAddresses" />
                            </TextBlock>
                        </Hyperlink.ToolTip>
                    </Hyperlink>
                </TextBlock>
                <TextBox Text="{Binding Filter, Mode=TwoWay}" ToolTipService.ShowDuration="10000" />
            </StackPanel>

            <!--  Search  -->
            <StackPanel
                Grid.Row="1"
                Grid.Column="1"
                Margin="6">
                <TextBlock FontWeight="Bold">
                    <Hyperlink helper:HyperlinkExtensions.IsWeb="true" NavigateUri="https://docs.microsoft.com/graph/search-query-parameter#using-search-on-directory-object-collections">
                        $search
                        <Hyperlink.ToolTip>
                            <TextBlock>
                                <Run Foreground="Green">// Enabled on displayName and Description</Run>
                                <LineBreak />
                                <Run Foreground="Green">// All the other properties will fallback to startsWith filter behavior</Run>
                                <LineBreak />
                                &quot;property1:value1&quot; [AND|OR] &quot;property2:value2&quot;</TextBlock>
                        </Hyperlink.ToolTip>
                    </Hyperlink>
                </TextBlock>

                <TextBox Text="{Binding Search, Mode=TwoWay}" ToolTipService.ShowDuration="10000" />
            </StackPanel>

            <!--  Entity List  -->
            <StackPanel
                Grid.Row="0"
                Grid.Column="2"
                Margin="6,0">
                <!--  AdditionalData property supports binding thanks to IEnumerable covariance  -->
                <TextBlock FontWeight="Bold" Text="{Binding DirectoryObjects.AdditionalData[@odata.count], StringFormat=Entities ({0}), FallbackValue=Entities}" />
                <ComboBox
                    Width="120"
                    ItemsSource="{Binding Entities}"
                    SelectedItem="{Binding SelectedEntity, Mode=TwoWay}"
                    ToolTip="Select Entity" />
            </StackPanel>

            <Button
                Grid.Row="1"
                Grid.Column="2"
                Margin="6"
                Padding="6,0"
                Click="LoadButton_Click"
                Command="{Binding LoadCommand}"
                Content="Load"
                IsDefault="True" />
        </Grid>

        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <TextBox
                Margin="6"
                Background="{DynamicResource {x:Static SystemColors.MenuBrushKey}}"
                GotFocus="TextBox_SelectAll"
                IsReadOnly="True"
                PreviewMouseDown="TextBox_PreviewMouseDown"
                Text="{Binding LastUrl, Mode=OneWay}" />
            <Button
                Grid.Column="1"
                Width="120"
                Margin="6"
                Padding="6,0"
                Command="{Binding LaunchGraphExplorerCommand}"
                Content="Graph Explorer" />
            <TextBox
                Grid.Row="1"
                Margin="6"
                Background="{DynamicResource {x:Static SystemColors.MenuBrushKey}}"
                GotFocus="TextBox_SelectAll"
                IsReadOnly="True"
                PreviewMouseDown="TextBox_PreviewMouseDown"
                Text="{Binding PowerShellCmdLet, Mode=OneWay}" />
            <Button
                Grid.Row="1"
                Grid.Column="1"
                Width="120"
                Margin="6"
                Padding="6,0"
                Command="{Binding OpenPowerShellCommand}"
                Content="Open PowerShell" />

        </Grid>
        <DataGrid
            Grid.Row="2"
            AutoGeneratedColumns="ResultsDataGrid_AutoGeneratedColumns"
            AutoGeneratingColumn="ResultsDataGrid_AutoGeneratingColumn"
            IsReadOnly="True"
            ItemsSource="{Binding DirectoryObjects}"
            SelectedItem="{Binding SelectedObject}"
            SelectionMode="Single">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDoubleClick">
                    <i:InvokeCommandAction Command="{Binding DrillDownCommand}" />
                </i:EventTrigger>
                <i:EventTrigger EventName="Sorting">
                    <i:InvokeCommandAction Command="{Binding SortCommand}" PassEventArgsToCommand="True" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </DataGrid>
        <StatusBar Grid.Row="3">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem Margin="6,0">
                <TextBlock Text="{Binding UserName, StringFormat=Hello {0}, TargetNullValue='Hello User'}" />
            </StatusBarItem>
            <Separator Grid.Column="1" Margin="0,0,6,0" />
            <StatusBarItem Grid.Column="2">
                <Button
                    Margin="0,0,6,0"
                    Padding="6,0"
                    Command="{Binding LogoutCommand}"
                    Content="Logout" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="3" HorizontalContentAlignment="Stretch">
                <ProgressBar
                    Height="12"
                    Margin="0,0,6,0"
                    IsIndeterminate="{Binding IsBusy}" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="4" Margin="0,0,6,0">
                <TextBlock Text="{Binding ElapsedMs, StringFormat={}{0:N0} ms}" />
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>